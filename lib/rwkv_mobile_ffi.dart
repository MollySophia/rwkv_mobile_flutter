// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// rwkv_mobile c_api.h in dart
class rwkv_mobile {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  rwkv_mobile(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  rwkv_mobile.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  rwkvmobile_runtime_t rwkvmobile_runtime_init_with_name(
    ffi.Pointer<ffi.Char> backend_name,
  ) {
    return _rwkvmobile_runtime_init_with_name(
      backend_name,
    );
  }

  late final _rwkvmobile_runtime_init_with_namePtr = _lookup<
      ffi.NativeFunction<
          rwkvmobile_runtime_t Function(
              ffi.Pointer<ffi.Char>)>>('rwkvmobile_runtime_init_with_name');
  late final _rwkvmobile_runtime_init_with_name =
      _rwkvmobile_runtime_init_with_namePtr
          .asFunction<rwkvmobile_runtime_t Function(ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_load_model(
    rwkvmobile_runtime_t runtime,
    ffi.Pointer<ffi.Char> model_path,
  ) {
    return _rwkvmobile_runtime_load_model(
      runtime,
      model_path,
    );
  }

  late final _rwkvmobile_runtime_load_modelPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(rwkvmobile_runtime_t,
              ffi.Pointer<ffi.Char>)>>('rwkvmobile_runtime_load_model');
  late final _rwkvmobile_runtime_load_model = _rwkvmobile_runtime_load_modelPtr
      .asFunction<int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_load_tokenizer(
    rwkvmobile_runtime_t runtime,
    ffi.Pointer<ffi.Char> vocab_file,
  ) {
    return _rwkvmobile_runtime_load_tokenizer(
      runtime,
      vocab_file,
    );
  }

  late final _rwkvmobile_runtime_load_tokenizerPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(rwkvmobile_runtime_t,
              ffi.Pointer<ffi.Char>)>>('rwkvmobile_runtime_load_tokenizer');
  late final _rwkvmobile_runtime_load_tokenizer =
      _rwkvmobile_runtime_load_tokenizerPtr.asFunction<
          int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>)>();

  int rwkvmobile_runtime_eval_logits(
    rwkvmobile_runtime_t runtime,
    ffi.Pointer<ffi.Int> ids,
    int ids_len,
    ffi.Pointer<ffi.Float> logits,
    int logits_len,
  ) {
    return _rwkvmobile_runtime_eval_logits(
      runtime,
      ids,
      ids_len,
      logits,
      logits_len,
    );
  }

  late final _rwkvmobile_runtime_eval_logitsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Pointer<ffi.Int>,
              ffi.Int,
              ffi.Pointer<ffi.Float>,
              ffi.Int)>>('rwkvmobile_runtime_eval_logits');
  late final _rwkvmobile_runtime_eval_logits =
      _rwkvmobile_runtime_eval_logitsPtr.asFunction<
          int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Int>, int,
              ffi.Pointer<ffi.Float>, int)>();

  int rwkvmobile_runtime_eval_chat(
    rwkvmobile_runtime_t runtime,
    ffi.Pointer<ffi.Char> input,
    ffi.Pointer<ffi.Char> response,
    int max_length,
    ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>
        callback,
  ) {
    return _rwkvmobile_runtime_eval_chat(
      runtime,
      input,
      response,
      max_length,
      callback,
    );
  }

  late final _rwkvmobile_runtime_eval_chatPtr = _lookup<
          ffi.NativeFunction<
              ffi.Int Function(
                  rwkvmobile_runtime_t,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Int,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Char>)>>)>>(
      'rwkvmobile_runtime_eval_chat');
  late final _rwkvmobile_runtime_eval_chat =
      _rwkvmobile_runtime_eval_chatPtr.asFunction<
          int Function(
              rwkvmobile_runtime_t,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Char>)>>)>();

  int rwkvmobile_runtime_eval_chat_with_history(
    rwkvmobile_runtime_t handle,
    ffi.Pointer<ffi.Pointer<ffi.Char>> inputs,
    int num_inputs,
    ffi.Pointer<ffi.Char> response,
    int max_length,
    ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>
        callback,
  ) {
    return _rwkvmobile_runtime_eval_chat_with_history(
      handle,
      inputs,
      num_inputs,
      response,
      max_length,
      callback,
    );
  }

  late final _rwkvmobile_runtime_eval_chat_with_historyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Int Function(
                  rwkvmobile_runtime_t,
                  ffi.Pointer<ffi.Pointer<ffi.Char>>,
                  ffi.Int,
                  ffi.Pointer<ffi.Char>,
                  ffi.Int,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Char>)>>)>>(
      'rwkvmobile_runtime_eval_chat_with_history');
  late final _rwkvmobile_runtime_eval_chat_with_history =
      _rwkvmobile_runtime_eval_chat_with_historyPtr.asFunction<
          int Function(
              rwkvmobile_runtime_t,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              int,
              ffi.Pointer<ffi.Char>,
              int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Char>)>>)>();

  int rwkvmobile_runtime_gen_completion(
    rwkvmobile_runtime_t runtime,
    ffi.Pointer<ffi.Char> prompt,
    ffi.Pointer<ffi.Char> completion,
    int length,
  ) {
    return _rwkvmobile_runtime_gen_completion(
      runtime,
      prompt,
      completion,
      length,
    );
  }

  late final _rwkvmobile_runtime_gen_completionPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              rwkvmobile_runtime_t,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Int)>>('rwkvmobile_runtime_gen_completion');
  late final _rwkvmobile_runtime_gen_completion =
      _rwkvmobile_runtime_gen_completionPtr.asFunction<
          int Function(rwkvmobile_runtime_t, ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>, int)>();

  int rwkvmobile_runtime_clear_state(
    rwkvmobile_runtime_t runtime,
  ) {
    return _rwkvmobile_runtime_clear_state(
      runtime,
    );
  }

  late final _rwkvmobile_runtime_clear_statePtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(rwkvmobile_runtime_t)>>(
          'rwkvmobile_runtime_clear_state');
  late final _rwkvmobile_runtime_clear_state =
      _rwkvmobile_runtime_clear_statePtr
          .asFunction<int Function(rwkvmobile_runtime_t)>();
}

typedef rwkvmobile_runtime_t = ffi.Pointer<ffi.Void>;
